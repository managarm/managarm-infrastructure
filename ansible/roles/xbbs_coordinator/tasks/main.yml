---
- name: Install fcgiwrap (for git-http-backend)
  become: yes
  ansible.builtin.apt:
    pkg: [fcgiwrap]
  notify: fcgiwrap_service

- name: Install fcgiwrap isolation drop-in
  become: yes
  ansible.builtin.template:
    owner: root
    group: root
    mode: 0666
    src: fcgiwrap_isolation.conf.j2
    dest: '/etc/systemd/system/fcgiwrap.service.d/isolate.conf'
  notify: fcgiwrap_service

- name: Install xbstrap, xbbs and co.
  become: yes
  become_user: root
  ansible.builtin.pip:
    state: latest
    name:
      - 'git+https://github.com/managarm/xbstrap.git'
      # Valideer updated for py3.11
      - 'https://github.com/ArsenArsen/valideer/archive/cec1755914c21628706bb1392e0c61c6c600318e.tar.gz'
      - 'xbbs[history] @ git+https://github.com/managarm/xbbs.git'
      - y4
      - gunicorn
    virtualenv: '{{ xbbs_virtualenv }}'
  notify: xbbs_coordinator_services

- name: Generate coordinator configuration
  become: true
  become_user: xbbs
  ansible.builtin.template:
    mode: 0644
    src: "coordinator.toml.j2"
    dest: "/etc/xbbs/coordinator.toml"
  notify: xbbs_coordinator_services

- name: Generate webhook configuration
  become: true
  become_user: xbbs
  ansible.builtin.template:
    owner: xbbs
    group: xbbs
    mode: 0640
    src: "webhooks.toml.j2"
    dest: "/etc/xbbs/webhooks.toml"
  notify: xbbs_coordinator_services

- name: Install systemd service files
  become: yes
  become_user: root
  ansible.builtin.template:
    src: "xbbs-{{ item }}.service.j2"
    dest: "/etc/systemd/system/xbbs-{{ item }}.service"
    owner: root
    group: root
    mode: 0644
  loop: ["coordinator", "web", "webhooks"]
  notify: xbbs_coordinator_services

- name: Make xbbs home
  become: true
  become_user: root
  ansible.builtin.file:
    path: "/var/lib/xbbs"
    state: directory
    mode: 0755
    owner: xbbs
    group: xbbs

- name: Make project directories
  become: true
  become_user: xbbs
  ansible.builtin.file:
    path: "/var/lib/xbbs/projects/{{ item.key }}/"
    state: directory
    owner: xbbs
    group: xbbs
    mode: 0755
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Make project distrib roots
  become: true
  become_user: xbbs
  ansible.builtin.file:
    path: "/var/lib/xbbs/projects/{{ item.key }}/distrib"
    state: directory
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Copy signing public key
  become: true
  become_user: xbbs
  ansible.builtin.copy:
    src: secrets/xbbs/{{ item.value }}.plist
    dest: "/var/lib/xbbs/projects/{{ item.key }}/{{ item.value }}.plist"
    owner: xbbs
    group: xbbs
    mode: 0644
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Copy signing private key
  become: true
  become_user: xbbs
  ansible.builtin.copy:
    src: secrets/xbbs/{{ item.value }}.rsa
    dest: "/var/lib/xbbs/projects/{{ item.key }}/{{ item.value }}.rsa"
    owner: xbbs
    group: xbbs
    mode: 0640
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"


- name: Create web directory structure
  become: yes
  become_user: root
  ansible.builtin.file:
    state: directory
    path: '/var/www/{{ item }}'
    owner: www-data
    group: www-data
    mode: 0755
  loop:
    - mirrors
    - mirrors/currents
    - repos
    - repos/pinned
    - repos/cbuildrt
    - repos/buildenv
    - zeus
    - hades

- name: Link distribution repositories
  become: yes
  become_user: xbbs
  ansible.builtin.file:
    state: link
    src: '{{ item.value }}'
    dest: '/var/lib/xbbs/projects/{{ item.key }}/distrib/package_repo'
  loop: "{{ xbbs_cfg.distrib_repos|dict2items }}"

- name: Create mirror build link
  become: yes
  become_user: xbbs
  ansible.builtin.file:
    state: link
    force: yes
    follow: no
    path: '/var/lib/xbbs/projects/{{ item.key }}/mirror_build'
    src: '/var/lib/xbbs/mirror_build'
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Create mirror build directory
  become: yes
  become_user: root
  ansible.builtin.file:
    state: directory
    path: '/var/lib/xbbs/mirror_build'
    owner: xbbs
    group: xbbs
    mode: 0755

- name: Create current build link in mirrors
  become: yes
  become_user: root
  ansible.builtin.file:
    state: link
    force: yes
    follow: no
    path: '/var/www/mirrors/currents/{{ item.key }}'
    src: '/var/lib/xbbs/projects/{{ item.key }}/current'
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Upload xbbs-project-rotate
  become: yes
  become_user: root
  ansible.builtin.copy:
    src: 'xbbs-project-rotate'
    dest: '/var/lib/xbbs/xbbs-project-rotate'
    mode: 0755

- name: Add rotation cronjobs
  become: yes
  become_user: xbbs
  ansible.builtin.cron:
    name: 'xbbs-project-rotate-{{ item.key }}'
    minute: '0'
    hour: '21'
    job: >-
      cd /var/lib/xbbs/projects/{{ item.key|quote }} &&
      chronic /var/lib/xbbs/xbbs-project-rotate
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

- name: Run weekly full rebuilds
  become: yes
  become_user: xbbs
  ansible.builtin.cron:
    name: 'xbbs-full-rebuild-{{ item.key }}'
    minute: '0'
    hour: '1'
    dow: '7'
    job: >-
      . /etc/profile; chronic xbbs-cli build --no-incremental {{ item.key|quote }}
  loop: "{{ xbbs_cfg.fingerprints|dict2items }}"

# not included:
# - pkgs/repos # managed in the distributions role

# vim: sw=2 et :
